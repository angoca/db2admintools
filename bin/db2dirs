#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2014 Andres Gomez Casanova
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Shows the configuration in the different DB2 directories (node, db).
#
# Exit codes:
# 0 : Ok.
# 1 : DB2 binaries not found.
#
# 20140520 A. Gomez (AngocA) - Script creation.

# DB2 path
DB2_DIR=${DB2_DIR:-/opt/ibm/db2/V10.5}

# Flag for debugging.
#set -xv

# Locale to print messages in English. Prevent language problems.
export LANG=en_US

# Reads the instance directory
readInstDirectory () {
  INSTANCE=$1
  PROFILE_DIR=$(eval echo -e ~${INSTANCE}/sqllib/db2profile)

  # If the profile exist load it.
  if [[ -f ${PROFILE_DIR} ]] ; then
    . ${PROFILE_DIR}

    # Checks if DB2 is accessible.
    DB2_EXIST=$(which db2)
    if [[ -x "${DB2_EXIST}" ]] ; then

      db2 terminate > /dev/null 2>&1
      echo "Instance: ${INSTANCE}"
      # Shows the nodes.
      QTY=$(. ${PROFILE_DIR} ; db2 list node directory | awk '/entries/ {print $8}')
      if [[ ${QTY} -eq 0 ]] ; then
        echo " No nodes in the instance"
      else
        echo " Nodes: ${QTY}"
        echo "  Name     IP/Name         Port"
        db2 list node directory | tail -n +6 | awk '/^Node / {if (NR!=1) print ""; next} {printf $0} END {print "";}' | sort | awk '{printf "  %-8s %-15s %s\n",$4,$17,$21}'
      fi
      # Shows the databases.
      QTY=$(. ${PROFILE_DIR} ; db2 list db directory | awk '/entries/ {print $8}')
      if [[ ${QTY} -eq 0 ]] ; then
        echo " No database in the instance"
      else
       echo " Databases: ${QTY}"
        echo "   Node     Alias    (Name    )"
        echo "  Remote databases"
        db2 list db directory | tail -n +6 | awk '/^Database /  {if (NR!=1) print ""; next} {printf $0} END {print "a";}' | sort -k 12 | awk '/Remote/   {printf "   %-8s %-8s (%-8s)\n",$12,$4,$8}'
        echo "  Local databases"
        db2 list db directory | tail -n +6 | awk '/^Database /  {if (NR!=1) print ""; next} {printf $0} END {print "a";}' | awk '/Indirect/ {printf "   LOCAL    %-8s (%-8s) %s\n",$4,$8,$13}'
        echo
      fi
    else
      echo "DB2 has not been found at instance ${INSTANCE}"
    fi
  else
    echo "${INSTANCE} does not exist"
  fi
}

# Checks if db2greg exist.
if [[ -f ${DB2_DIR}/bin/db2greg ]] ; then
  DB2GREG=${DB2_DIR}/bin/db2greg
else
  echo "DB2 binaries (DB2GREG) location unknown."
  exit 1
fi

echo "Reading db2greg: ${DB2GREG}"
while read LINE ; do
  readInstDirectory $LINE
done < <(${DB2GREG} -dump | awk -F, '/^I,DB2/ {print $4}')

