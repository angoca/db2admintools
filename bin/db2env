#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2014 Andres Gomez Casanova
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Changes the configuration of the environment to the given DB2 instance.
#
# There are two modes to execute this script
#  * With a menu (. ./db2env)
#  * With a given instance (. ./db2env db2inst1)
# You need to 'source' this command in order to change the environment. For this
# it is necessary to write a dot followed by a space, then the command.
#   . ./db2env
# To ease the process, you can create a function per instance in the .profile.
#
# function i1 { . ~/db2-shared/bin/db2env db2inst1 ; }
# function i2 { . ~/db2-shared/bin/db2env db2inst2 ; }
#
# To configure it, you just need to change the DB2 path.
#   export DB2_DIR=/opt/ibm/db2/v10.5
# By default it takes the path from v9.7
#
# Exit codes:
# 0 : Ok.
# 1 : Instance does not exist.
# 2 : DB2 binaries not found.
#
# 20130601 A. Gomez (AngocA) - Creation script.
# 20130617 A. Gomez (AngocA) - Modification after refactoring to get close to
#   oraenv.
# 20140520 A. Gomez (AngocA) - Env variable to configure. Checks errors.

# DB2 path
DB2_DIR=${DB2_DIR:-/opt/ibm/db2/V10.5}

# Flag for debugging.
#set -xv

# Locale to print messages in English. Prevent language problems.
export LANG=en_US

# Configures the environment to access the given instance (username).
changeInstance () {
  # Instance name (lower case)
  INSTANCE=$1
  PROFILE_DIR=$(eval echo -e ~${INSTANCE}/sqllib/db2profile)
  RETURN=0

  # If  the profile exist load it.
  if [[ -f ${PROFILE_DIR} ]] ; then
    . ${PROFILE_DIR}

    # Checks if DB2 is accessible.
    DB2_EXIST=$(which db2)
    if [[ -x "${DB2_EXIST}" ]] ; then
      # Disconnect any existing connection.
      CONN=$(db2 connect 2> /dev/null | awk '/Local database alias/ {print $5}')
      if [[ ! -z ${CONN} ]] ; then
        echo "Disconnected from ${CONN}"
      fi

      # Terminates the previous db2bp (DB2 backend process)
      db2 terminate > /dev/null 2>&1
    else
      echo "DB2 was not found"
    fi
    echo "Current instance '${DB2INSTANCE}'"
  else
    echo "DB2 profile does not exist for the given instance"
    RETURN=1
  fi
  return ${RETURN}
}

# Instance name (lower case)
INSTANCE=$1

# Checks if db2greg exist.
if [[ -f ${DB2_DIR}/bin/db2greg ]] ; then
  DB2GREG=${DB2_DIR}/bin/db2greg
else
  echo "DB2 binaries (DB2GREG) location unknown."
  exit 2
fi

# Checks if an instance name was given.
if [[ -z ${INSTANCE} ]] ; then
  PS3='Please select an instance: '

  INDEX=0
  while read LINE ; do
    CLIENTS[$INDEX]="$LINE"
    INDEX=$(($INDEX+1))
  done < <(${DB2GREG} -dump | awk -F, '/^I,DB2/ {print $4}')

  QUIT=Quit
  CLIENTS[$INDEX]=${QUIT}
  # Reads the option from the user.
  select OPT in "${CLIENTS[@]}"
  do
    if [[ ${OPT} != ${QUIT} ]] ; then
      INST_VALID=$(${DB2GREG} -dump | grep I, | grep ,${OPT},\/)
      # Checks if the instance exists in the server
      if [[ -z ${INST_VALID} ]] ; then
        echo "Invalid instance: ${INSTANCE}"
      else
        changeInstance ${OPT}
        if [[ $? -eq 0 ]] ; then
          break
        fi
      fi
    else
      break
    fi
  done
else
  INST_VALID=$(${DB2GREG} -dump | grep I, | grep ,${INSTANCE},)
  # Checks if the instance exists in the server
  if [[ -z ${INST_VALID} ]] ; then
    echo "Invalid instance: '${INSTANCE}'"
  else
    changeInstance ${INSTANCE}
  fi
fi

